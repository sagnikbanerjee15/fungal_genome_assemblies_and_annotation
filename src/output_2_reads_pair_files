#!/usr/bin/env python3

##############################################################################################################################
#
#
##############################################################################################################################
from argparse import RawTextHelpFormatter

import os
import glob
import argparse
import sys

def parseCommandLineArguments():

    parser = argparse.ArgumentParser( prog = "output_2_read_pair_files", description = """Outputs 2 strings which are the left and right reads. If multiple files are found they will be merged""", formatter_class = RawTextHelpFormatter )

    parser.add_argument( "--directory_with_input_reads", help = "Enter the directory name that contains all the raw input reads", required = True )
    parser.add_argument( "--merged_left_read_filename", help = "Enter the name of the merged file for all left reads", required = True)
    parser.add_argument( "--merged_right_read_filename", help = "Enter the name of the merged file for all right reads", required = True)
    
    return parser.parse_args()


def main():
    """
    """
    options = parseCommandLineArguments()
    
    # Assumes that the samples are paired ended
    all_samples_left = sorted(glob.glob(f"{options.directory_with_input_reads}/*_1.fastq"))
    all_samples_right = sorted(glob.glob(f"{options.directory_with_input_reads}/*_2.fastq"))
    
    cmd = f"cat "
    for each_sample in all_samples_left:
        cmd += f" {each_sample}"
    cmd += f" > {options.merged_left_read_filename}"
    os.system(cmd)
    
    cmd = f"cat "
    for each_sample in all_samples_right:
        cmd += f" {each_sample}"
    cmd += f" > {options.merged_right_read_filename}"
    os.system(cmd)
        
   
    

if __name__ == "__main__":
    main()